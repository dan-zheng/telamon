use std::os::raw::c_int;

#[derive(Debug)]
pub enum Error {
    DeviceNotFound,
    DeviceNotAvailable,
    CompilerNotAvailable,
    MemObjectAllocationFailure,
    OutOfResources,
    OutOfHostMemory,
    ProfilingInfoNotAvailable,
    MemCopyOverlap,
    ImageFormatMismatch,
    ImageFormatNotSupported,
    BuildProgramFailure,
    MapFailure,
    MisalignedSubBufferOffset,
    ExecStatusErrorForEventsInWaitList,
    CompileProgramFailure,
    LinkerNotAvailable,
    LinkProgramFailure,
    DevicePartitionFailed,
    KernelArgInfoNotAvailable,
    InvalidValue,
    InvalidDeviceType,
    InvalidPlatform,
    InvalidDevice,
    InvalidContext,
    InvalidQueueProperties,
    InvalidCommandQueue,
    InvalidHostPtr,
    InvalidMemObject,
    InvalidImageFormatDescriptor,
    InvalidImageSize,
    InvalidSampler,
    InvalidBinary,
    InvalidBuildOptions,
    InvalidProgram,
    InvalidProgramExecutable,
    InvalidKernelName,
    InvalidKernelDefinition,
    InvalidKernel,
    InvalidArgIndex,
    InvalidArgValue,
    InvalidArgSize,
    InvalidKernelArgs,
    InvalidWorkDimension,
    InvalidWorkGroupSize,
    InvalidWorkItemSize,
    InvalidGlobalOffset,
    InvalidEventWaitList,
    InvalidEvent,
    InvalidOperation,
    InvalidGlObject,
    InvalidBufferSize,
    InvalidMipLevel,
    InvalidGlobalWorkSize,
    InvalidProperty,
    InvalidImageDescriptor,
    InvalidCompilerOptions,
    InvalidLinkerOptions,
    InvalidDevicePartitionCount,
    InvalidPipeSize,
    InvalidDeviceQueue,
    OtherTelajaxProblem,
}

impl From<c_int> for Error {
    fn from(err: c_int) -> Self {
        use self::Error::*;
        match err {
            -1 => DeviceNotFound,
            -2 => DeviceNotAvailable,
            -3 => CompilerNotAvailable,
            -4 => MemObjectAllocationFailure,
            -5 => OutOfResources,
            -6 => OutOfHostMemory,
            -7 => ProfilingInfoNotAvailable,
            -8 => MemCopyOverlap,
            -9 => ImageFormatMismatch,
            -10 => ImageFormatNotSupported,
            -11 => BuildProgramFailure,
            -12 => MapFailure,
            -13 => MisalignedSubBufferOffset,
            -14 => ExecStatusErrorForEventsInWaitList,
            -15 => CompileProgramFailure,
            -16 => LinkerNotAvailable,
            -17 => LinkProgramFailure,
            -18 => DevicePartitionFailed,
            -19 => KernelArgInfoNotAvailable,
            -30 => InvalidValue,
            -31 => InvalidDeviceType,
            -32 => InvalidPlatform,
            -33 => InvalidDevice,
            -34 => InvalidContext,
            -35 => InvalidQueueProperties,
            -36 => InvalidCommandQueue,
            -37 => InvalidHostPtr,
            -38 => InvalidMemObject,
            -39 => InvalidImageFormatDescriptor,
            -40 => InvalidImageSize,
            -41 => InvalidSampler,
            -42 => InvalidBinary,
            -43 => InvalidBuildOptions,
            -44 => InvalidProgram,
            -45 => InvalidProgramExecutable,
            -46 => InvalidKernelName,
            -47 => InvalidKernelDefinition,
            -48 => InvalidKernel,
            -49 => InvalidArgIndex,
            -50 => InvalidArgValue,
            -51 => InvalidArgSize,
            -52 => InvalidKernelArgs,
            -53 => InvalidWorkDimension,
            -54 => InvalidWorkGroupSize,
            -55 => InvalidWorkItemSize,
            -56 => InvalidGlobalOffset,
            -57 => InvalidEventWaitList,
            -58 => InvalidEvent,
            -59 => InvalidOperation,
            -60 => InvalidGlObject,
            -61 => InvalidBufferSize,
            -62 => InvalidMipLevel,
            -63 => InvalidGlobalWorkSize,
            -64 => InvalidProperty,
            -65 => InvalidImageDescriptor,
            -66 => InvalidCompilerOptions,
            -67 => InvalidLinkerOptions,
            -68 => InvalidDevicePartitionCount,
            -69 => InvalidPipeSize,
            -70 => InvalidDeviceQueue,
            -1111 => OtherTelajaxProblem,
            _ => panic!("Invalid OpenCL error code"),
        }
    }
}
